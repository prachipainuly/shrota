from Machine_learning.open_video_and_display import get_landmarks_from_video
import csv
from dtw_test import compare_two_sequences
from process_landmark_vectors import get_landmark_sequence_similarity

# Absolute file paths to different videos displaying the word 'book'
file_prefix_book = 'C:/Users/jenss/PycharmProjects/shrota/Machine_learning/data_set/black/'
file_prefix_drink = 'C:/Users/jenss/PycharmProjects/shrota/Machine_learning/data_set/banana/'

filepath_book = ['06472.mp4', '06473.mp4', '06474.mp4']

filepath_drink = ['04900.mp4', '04903.mp4', '65135.mp4']


for i in range(len(filepath_book)):
    filepath_book[i] = file_prefix_book + filepath_book[i]
for i in range(len(filepath_drink)):
    filepath_drink[i] = file_prefix_drink + filepath_drink[i]

# list in which we will store the landmark points for every of the analyzed videos
landmark_vectors_book = []
landmark_vectors_drink = []
for file in filepath_book:
    landmark_vectors_book.append(get_landmarks_from_video(file))

for file in filepath_drink:
    landmark_vectors_drink.append(get_landmarks_from_video(file))


print("Similarities for first word:")

similarity_book_12 = get_landmark_sequence_similarity(landmark_vectors_book[0], landmark_vectors_book[1])
similarity_book_13 = get_landmark_sequence_similarity(landmark_vectors_book[0], landmark_vectors_book[2])
similarity_book_23 = get_landmark_sequence_similarity(landmark_vectors_book[1], landmark_vectors_book[2])

print(similarity_book_12)
print(similarity_book_13)
print(similarity_book_23)

print("Average similarity first word:")
print((similarity_book_12[1] + similarity_book_13[1] + similarity_book_23[1])/3)

similarity_drink_12 = get_landmark_sequence_similarity(landmark_vectors_drink[0], landmark_vectors_drink[1])
similarity_drink_13 = get_landmark_sequence_similarity(landmark_vectors_drink[0], landmark_vectors_drink[2])
similarity_drink_23 = get_landmark_sequence_similarity(landmark_vectors_drink[1], landmark_vectors_drink[2])

print("Similarities for second word:")
print(similarity_drink_12)
print(similarity_drink_13)
print(similarity_drink_23)

print("Average similarity second word:")
print((similarity_drink_12[1] + similarity_drink_13[1] + similarity_drink_23[1])/3)

print("Now we compare the two words:")
similarity_book1_drink1 = get_landmark_sequence_similarity(landmark_vectors_book[0], landmark_vectors_drink[0])
similarity_book1_drink2 = get_landmark_sequence_similarity(landmark_vectors_book[0], landmark_vectors_drink[1])
similarity_book1_drink3 = get_landmark_sequence_similarity(landmark_vectors_book[0], landmark_vectors_drink[2])
similarity_book2_drink1 = get_landmark_sequence_similarity(landmark_vectors_book[1], landmark_vectors_drink[0])
similarity_book2_drink2 = get_landmark_sequence_similarity(landmark_vectors_book[1], landmark_vectors_drink[1])
similarity_book2_drink3 = get_landmark_sequence_similarity(landmark_vectors_book[1], landmark_vectors_drink[2])
similarity_book3_drink1 = get_landmark_sequence_similarity(landmark_vectors_book[2], landmark_vectors_drink[0])
similarity_book3_drink2 = get_landmark_sequence_similarity(landmark_vectors_book[2], landmark_vectors_drink[1])
similarity_book3_drink3 = get_landmark_sequence_similarity(landmark_vectors_book[2], landmark_vectors_drink[2])

print(similarity_book1_drink1)
print(similarity_book1_drink2)
print(similarity_book1_drink3)
print(similarity_book2_drink1)
print(similarity_book2_drink2)
print(similarity_book2_drink3)
print(similarity_book3_drink1)
print(similarity_book3_drink2)
print(similarity_book3_drink3)

print("average similarity between the words:")
print((similarity_book1_drink1[1]+similarity_book1_drink2[1]+similarity_book1_drink3[1]+similarity_book2_drink1[1]
       +similarity_book2_drink2[1]+similarity_book2_drink3[1]+
       similarity_book3_drink1[1]+similarity_book3_drink2[1]+similarity_book3_drink3[1])/9)



# write in csv:

# with open('landmark0_y', 'w') as f:
#     # using csv.writer method from CSV package
#     write = csv.writer(f)
#     for right_hand_list in results_right_hand_book:
#         write.writerow(right_hand_list)
#         write.writerow("video_end")
#     write.writerow("now_drink")
#     for right_hand_list in results_right_hand_drink:
#         write.writerow(right_hand_list)


# Now results contains xyz coordinates for set of landmarks for gesture

# TODO: Feed the data to machine learning model (maybe Tensor Flow) to later recognize gestures

# we will now insert the data generated by mediapipe into a dtw routine:

#compare book1 to book2:
# print("Now we compare book video 1 with book video 2:")
# print(compare_two_sequences(results_right_hand_book[0], results_right_hand_book[1]))
# print("Now we compare book video 1 with book video 3:")
# print(compare_two_sequences(results_right_hand_book[0], results_right_hand_book[2]))
# print("Now we compare book video 2 with book video 3:")
# print(compare_two_sequences(results_right_hand_book[1], results_right_hand_book[2]))
#
# print("We compared book. Now lets compare drink!")
#
# print("Now we compare drink video 1 with drink video 2:")
# print(compare_two_sequences(results_right_hand_drink[0], results_right_hand_drink[1]))
# print("Now we compare drink video 1 with drink video 3:")
# print(compare_two_sequences(results_right_hand_drink[0], results_right_hand_drink[2]))
# print("Now we compare drink video 2 with drink video 3:")
# print(compare_two_sequences(results_right_hand_drink[1], results_right_hand_drink[2]))
#
# print("Now lets compare book 1 with drink")
#
# print("Now we compare book video 1 with drink video 1:")
# print(compare_two_sequences(results_right_hand_book[0], results_right_hand_drink[0]))
# print("Now we compare book video 1 with drink video 2:")
# print(compare_two_sequences(results_right_hand_book[0], results_right_hand_drink[1]))
# print("Now we compare book video 1 with drink video 3:")
# print(compare_two_sequences(results_right_hand_book[0], results_right_hand_drink[2]))

# Now we analyze the whole series

# right_hand_book_first = results_right_hand_book[0]
# right_hand_book_second = results_right_hand_book[1]
# right_hand_book_third = results_right_hand_book[2]
#
# right_hand_drink_first = results_right_hand_drink[0]
# right_hand_drink_second = results_right_hand_drink[1]
#
# similarity_book_1= 0
# similarity_book_2 = 0
# similarity_book_3 = 0
# similarity_book_drink_1 = 0
#
# for i in range(21):
#     # get the time series for each landmark: We start with x
#     similarity_book_1 = similarity_book_1 + compare_two_sequences(right_hand_book_first[0][i::21], right_hand_book_second[0][i::21])
#     similarity_book_2 = similarity_book_2 + compare_two_sequences(right_hand_book_first[0][i::21],
#                                                               right_hand_book_third[0][i::21])
#     similarity_book_3 = similarity_book_3 + compare_two_sequences(right_hand_book_second[0][i::21],
#                                                               right_hand_book_third[0][i::21])
#     similarity_book_drink_1 = similarity_book_drink_1 + compare_two_sequences(right_hand_book_first[0][i::21], right_hand_drink_first[0][i::21])
#     # now y
#     similarity_book_1 = similarity_book_1 + compare_two_sequences(right_hand_book_first[1][i::21],
#                                                                   right_hand_book_second[1][i::21])
#     similarity_book_2 = similarity_book_2 + compare_two_sequences(right_hand_book_first[1][i::21],
#                                                                   right_hand_book_third[1][i::21])
#     similarity_book_3 = similarity_book_3 + compare_two_sequences(right_hand_book_second[1][i::21],
#                                                                   right_hand_book_third[1][i::21])
#     similarity_book_drink_1 = similarity_book_drink_1 + compare_two_sequences(right_hand_book_first[1][i::21],
#                                                                           right_hand_drink_first[1][i::21])
#     #now z
#     similarity_book_1 = similarity_book_1 + compare_two_sequences(right_hand_book_first[2][i::21],
#                                                                   right_hand_book_second[2][i::21])
#     similarity_book_2 = similarity_book_2 + compare_two_sequences(right_hand_book_first[2][i::21],
#                                                                   right_hand_book_third[2][i::21])
#     similarity_book_3 = similarity_book_3 + compare_two_sequences(right_hand_book_second[2][i::21],
#                                                                   right_hand_book_third[2][i::21])
#     similarity_book_drink_1 = similarity_book_drink_1 + compare_two_sequences(right_hand_book_first[2][i::21],
#                                                                           right_hand_drink_first[2][i::21])
# print("Similarity between the two books:")
# print (similarity_book_1)
# print(similarity_book_2)
# print(similarity_book_3)
# print("Similarity between book and drink:")
# print(similarity_book_drink_1)